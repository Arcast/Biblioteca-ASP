@model Entidad.ViewsModels.VM_Estudiantes.VM_GuardarEstudiante

@{
    Layout = "~/Views/Shared/_Layout.cshtml";
}

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Estudiante</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.CI, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.CI, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.CI, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Nombre, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Nombre, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Nombre, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Direccion, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Direccion, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Direccion, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Carrera, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Carrera, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Carrera, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Edad, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Edad, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Edad, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <button type="submit" class="btn btn-primary" id="GuardarEstudiante">Guardar Estudiante</button>
                @*<input type="submit" value="Create" class="btn btn-default" />*@
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Regresar", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    <script>
        $(document).ready(function () {
            //Guardar el Estudiante
            $('#GuardarEstudiante').click(function (event) {
                event.preventDefault();
                var CI = $("#CI").val();
                var Nombre = $("#Nombre").val();
                var Direccion = $("#Direccion").val();
                var Carrera = $("#Carrera").val();
                var Edad = $("#Edad").val();

                var DatoJson =
                {
                    estud:
                    {
                        CI : CI,
                        Nombre : Nombre,
                        Direccion : Direccion,
                        Carrera : Carrera,
                        Edad : Edad
                    }
                }

                $.ajax(
                    {
                        type : "POST",
                        url : '@Url.Action("GuardarEstudiante","Estudiantes")',
                        data : JSON.stringify(DatoJson),
                        dataType : 'JSON',
                        contentType : "application/json; charset=utf-8",
                        success: function (data)
                        {
                            alert("Estudiante guardado correctamente...!");
                        }, 
                        error: function (jqXHR, TextStatus, errorThrow)
                        {
                            Error(jqXHR, TextStatus, errorThrow);
                        }
                    }
                ).done(function(result)
                {
                    console.log(result);
                });

            });
        })
    </script>
}